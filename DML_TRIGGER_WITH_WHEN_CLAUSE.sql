/*CREATING THE CTAS ON THE TABLE */

CREATE TABLE TRIG_EMPLOYEE AS
SELECT * FROM EMP;

/*DML TRIGGER WITHOUT THE WHEN CLAUSE*/

CREATE OR REPLACE TRIGGER EMP_SAL_LIMIT_TGR
AFTER INSERT OR DELETE OR UPDATE OF DEPTNO,SAL ON TRIG_EMPLOYEE
FOR EACH ROW
DECLARE
    MAX_EMP_SAL CONSTANT PLS_INTEGER := 3000;
    DEPT_NO CONSTANT PLS_INTEGER :=30;
BEGIN
    DBMS_OUTPUT.PUT_LINE('TRIGGER EXECUTING');
    IF ( :NEW.DEPTNO=DEPT_NO AND :NEW.SAL>MAX_EMP_SAL ) OR
       ( :OLD.DEPTNO=DEPT_NO AND :NEW.SAL>MAX_EMP_SAL ) OR
       ( :NEW.DEPTNO=DEPT_NO AND :OLD.SAL>MAX_EMP_SAL ) THEN
       RAISE_APPLICATION_ERROR(-20000,'MAX SAL REACHED');
    END IF ;
END ;

INSERT INTO TRIG_EMPLOYEE(EMPNO,SAL,DEPTNO) VALUES (1001,3500,30);

UPDATE TRIG_EMPLOYEE SET DEPTNO=30 WHERE ENAME='KING';

SELECT * FROM TRIG_EMPLOYEE WHERE ENAME='KING'

ALTER TRIGGER EMP_SAL_LIMIT_TGR  DISABLE

DROP TRIGGER EMP_SAL_LIMIT_TGR

/*DML TRIGGER WITH THE WHEN CLAUSE*/


CREATE OR REPLACE TRIGGER ESAL_WITH_WHEN
AFTER INSERT OR UPDATE OF DEPTNO , SAL ON TRIG_EMPLOYEE
FOR EACH ROW
WHEN ((NEW.DEPTNO=30 AND NEW.SAL>3000 ) OR
     (OLD.DEPTNO=30 AND NEW.SAL>3000 )  OR
     ( NEW.DEPTNO=30 AND OLD.SAL>3000))
DECLARE
BEGIN
    DBMS_OUTPUT.PUT_LINE('TRIGGER EXECUTING');
    RAISE_APPLICATION_ERROR(-20000,'MAX SAL REACHED');
END ;

INSERT INTO TRIG_EMPLOYEE(EMPNO,SAL,DEPTNO) VALUES (1001,3500,30);

UPDATE TRIG_EMPLOYEE SET DEPTNO=30 WHERE ENAME='KING';