/*FUNCTION OVERLOADING IN PLSQL */
/*--------------------------------------------------------*/
CREATE OR REPLACE PACKAGE AREA_PKG IS 
FUNCTION AREA_FUNC 
(
    RADIUS IN NUMBER

)
RETURN NUMBER ;
FUNCTION AREA_FUNC 
(
    LEN IN NUMBER,
    HEI IN NUMBER
    
) 
RETURN NUMBER;

END AREA_PKG


CREATE OR REPLACE PACKAGE BODY AREA_PKG IS 
FUNCTION AREA_FUNC 
(
    RADIUS IN NUMBER

) RETURN NUMBER
IS 
    AREA NUMBER ;

BEGIN

    AREA:=3.14*RADIUS;
    DBMS_OUTPUT.PUT_LINE('AREA CALCULATED FOR CIRCLE');
    RETURN AREA ;

EXCEPTION 
    WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('SOMETHING WENT WRONG');

END AREA_FUNC ;

FUNCTION AREA_FUNC 
(
    LEN IN NUMBER,
    HEI IN NUMBER
    
) 
RETURN NUMBER
IS
    AREA NUMBER ;
BEGIN 
    AREA:= LEN * HEI;
    DBMS_OUTPUT.PUT_LINE('AREA CALCULATED FOR THE SQUARE ');
    RETURN AREA ; 

EXCEPTION
    WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('SOMETHING WENT WRONG');

END AREA_FUNC;
END AREA_PKG ;

/*INVOKING THE FUNCTION ONE BY ONE AS  PER THE OVERLOADING*/
/*HERE WE ARE CALLING OUT THE AREA FUNC USING ONLY ONE PARAMETER HENCE ONLY ONE WILL BE CALLED*/
/* 1ST APPROACH */
SELECT AREA_PKG.AREA_FUNC(RADIUS=>5) FROM DUAL ;
/* 2ND APPROACH */
DECLARE 
    RESULT_VAR NUMBER ;
BEGIN
    RESULT_VAR:=AREA_PKG.AREA_FUNC(RADIUS=>5);
    DBMS_OUTPUT.PUT_LINE(RESULT_VAR);
END ;

/*HERE WE ARE CALLING OUT THE AREA FUNC USING TWO PARAMETER HENCE ONLY ONE WILL BE CALLED*/
/* 1ST APPROACH */
SELECT AREA_PKG.AREA_FUNC(HEI=>5,LEN=>5) FROM DUAL ;
/* 2ND APPROACH */
DECLARE 
    RESULT_VAR NUMBER ;
BEGIN
    RESULT_VAR:=AREA_PKG.AREA_FUNC(HEI=>5,LEN=>5);
    DBMS_OUTPUT.PUT_LINE(RESULT_VAR);
END ;
